
EasiestPrintf：     文件格式 elf32-i386


Disassembly of section .init:

0804855c <_init>:
 804855c:	53                   	push   %ebx
 804855d:	83 ec 08             	sub    $0x8,%esp
 8048560:	e8 db 00 00 00       	call   8048640 <__x86.get_pc_thunk.bx>
 8048565:	81 c3 53 1a 00 00    	add    $0x1a53,%ebx
 804856b:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
 8048571:	85 c0                	test   %eax,%eax
 8048573:	74 05                	je     804857a <_init+0x1e>
 8048575:	e8 4e 00 00 00       	call   80485c8 <__gmon_start__@plt>
 804857a:	83 c4 08             	add    $0x8,%esp
 804857d:	5b                   	pop    %ebx
 804857e:	c3                   	ret    

Disassembly of section .plt:

08048580 <.plt>:
 8048580:	ff 35 bc 9f 04 08    	pushl  0x8049fbc
 8048586:	ff 25 c0 9f 04 08    	jmp    *0x8049fc0
 804858c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .plt.got:

08048590 <read@plt>:
 8048590:	ff 25 c4 9f 04 08    	jmp    *0x8049fc4
 8048596:	66 90                	xchg   %ax,%ax

08048598 <printf@plt>:
 8048598:	ff 25 c8 9f 04 08    	jmp    *0x8049fc8
 804859e:	66 90                	xchg   %ax,%ax

080485a0 <_exit@plt>:
 80485a0:	ff 25 cc 9f 04 08    	jmp    *0x8049fcc
 80485a6:	66 90                	xchg   %ax,%ax

080485a8 <sleep@plt>:
 80485a8:	ff 25 d0 9f 04 08    	jmp    *0x8049fd0
 80485ae:	66 90                	xchg   %ax,%ax

080485b0 <alarm@plt>:
 80485b0:	ff 25 d4 9f 04 08    	jmp    *0x8049fd4
 80485b6:	66 90                	xchg   %ax,%ax

080485b8 <__stack_chk_fail@plt>:
 80485b8:	ff 25 d8 9f 04 08    	jmp    *0x8049fd8
 80485be:	66 90                	xchg   %ax,%ax

080485c0 <puts@plt>:
 80485c0:	ff 25 dc 9f 04 08    	jmp    *0x8049fdc
 80485c6:	66 90                	xchg   %ax,%ax

080485c8 <__gmon_start__@plt>:
 80485c8:	ff 25 e0 9f 04 08    	jmp    *0x8049fe0
 80485ce:	66 90                	xchg   %ax,%ax

080485d0 <exit@plt>:
 80485d0:	ff 25 e4 9f 04 08    	jmp    *0x8049fe4
 80485d6:	66 90                	xchg   %ax,%ax

080485d8 <open@plt>:
 80485d8:	ff 25 e8 9f 04 08    	jmp    *0x8049fe8
 80485de:	66 90                	xchg   %ax,%ax

080485e0 <__libc_start_main@plt>:
 80485e0:	ff 25 ec 9f 04 08    	jmp    *0x8049fec
 80485e6:	66 90                	xchg   %ax,%ax

080485e8 <setvbuf@plt>:
 80485e8:	ff 25 f0 9f 04 08    	jmp    *0x8049ff0
 80485ee:	66 90                	xchg   %ax,%ax

080485f0 <memset@plt>:
 80485f0:	ff 25 f4 9f 04 08    	jmp    *0x8049ff4
 80485f6:	66 90                	xchg   %ax,%ax

080485f8 <__isoc99_scanf@plt>:
 80485f8:	ff 25 f8 9f 04 08    	jmp    *0x8049ff8
 80485fe:	66 90                	xchg   %ax,%ax

08048600 <close@plt>:
 8048600:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048606:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048610 <_start>:
 8048610:	31 ed                	xor    %ebp,%ebp
 8048612:	5e                   	pop    %esi
 8048613:	89 e1                	mov    %esp,%ecx
 8048615:	83 e4 f0             	and    $0xfffffff0,%esp
 8048618:	50                   	push   %eax
 8048619:	54                   	push   %esp
 804861a:	52                   	push   %edx
 804861b:	68 a0 89 04 08       	push   $0x80489a0
 8048620:	68 40 89 04 08       	push   $0x8048940
 8048625:	51                   	push   %ecx
 8048626:	56                   	push   %esi
 8048627:	68 2e 88 04 08       	push   $0x804882e
 804862c:	e8 af ff ff ff       	call   80485e0 <__libc_start_main@plt>
 8048631:	f4                   	hlt    
 8048632:	66 90                	xchg   %ax,%ax
 8048634:	66 90                	xchg   %ax,%ax
 8048636:	66 90                	xchg   %ax,%ax
 8048638:	66 90                	xchg   %ax,%ax
 804863a:	66 90                	xchg   %ax,%ax
 804863c:	66 90                	xchg   %ax,%ax
 804863e:	66 90                	xchg   %ax,%ax

08048640 <__x86.get_pc_thunk.bx>:
 8048640:	8b 1c 24             	mov    (%esp),%ebx
 8048643:	c3                   	ret    
 8048644:	66 90                	xchg   %ax,%ax
 8048646:	66 90                	xchg   %ax,%ax
 8048648:	66 90                	xchg   %ax,%ax
 804864a:	66 90                	xchg   %ax,%ax
 804864c:	66 90                	xchg   %ax,%ax
 804864e:	66 90                	xchg   %ax,%ax

08048650 <deregister_tm_clones>:
 8048650:	b8 0b a0 04 08       	mov    $0x804a00b,%eax
 8048655:	2d 08 a0 04 08       	sub    $0x804a008,%eax
 804865a:	83 f8 06             	cmp    $0x6,%eax
 804865d:	76 1a                	jbe    8048679 <deregister_tm_clones+0x29>
 804865f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048664:	85 c0                	test   %eax,%eax
 8048666:	74 11                	je     8048679 <deregister_tm_clones+0x29>
 8048668:	55                   	push   %ebp
 8048669:	89 e5                	mov    %esp,%ebp
 804866b:	83 ec 14             	sub    $0x14,%esp
 804866e:	68 08 a0 04 08       	push   $0x804a008
 8048673:	ff d0                	call   *%eax
 8048675:	83 c4 10             	add    $0x10,%esp
 8048678:	c9                   	leave  
 8048679:	f3 c3                	repz ret 
 804867b:	90                   	nop
 804867c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048680 <register_tm_clones>:
 8048680:	b8 08 a0 04 08       	mov    $0x804a008,%eax
 8048685:	2d 08 a0 04 08       	sub    $0x804a008,%eax
 804868a:	c1 f8 02             	sar    $0x2,%eax
 804868d:	89 c2                	mov    %eax,%edx
 804868f:	c1 ea 1f             	shr    $0x1f,%edx
 8048692:	01 d0                	add    %edx,%eax
 8048694:	d1 f8                	sar    %eax
 8048696:	74 1b                	je     80486b3 <register_tm_clones+0x33>
 8048698:	ba 00 00 00 00       	mov    $0x0,%edx
 804869d:	85 d2                	test   %edx,%edx
 804869f:	74 12                	je     80486b3 <register_tm_clones+0x33>
 80486a1:	55                   	push   %ebp
 80486a2:	89 e5                	mov    %esp,%ebp
 80486a4:	83 ec 10             	sub    $0x10,%esp
 80486a7:	50                   	push   %eax
 80486a8:	68 08 a0 04 08       	push   $0x804a008
 80486ad:	ff d2                	call   *%edx
 80486af:	83 c4 10             	add    $0x10,%esp
 80486b2:	c9                   	leave  
 80486b3:	f3 c3                	repz ret 
 80486b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80486b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080486c0 <__do_global_dtors_aux>:
 80486c0:	80 3d 48 a0 04 08 00 	cmpb   $0x0,0x804a048
 80486c7:	75 13                	jne    80486dc <__do_global_dtors_aux+0x1c>
 80486c9:	55                   	push   %ebp
 80486ca:	89 e5                	mov    %esp,%ebp
 80486cc:	83 ec 08             	sub    $0x8,%esp
 80486cf:	e8 7c ff ff ff       	call   8048650 <deregister_tm_clones>
 80486d4:	c6 05 48 a0 04 08 01 	movb   $0x1,0x804a048
 80486db:	c9                   	leave  
 80486dc:	f3 c3                	repz ret 
 80486de:	66 90                	xchg   %ax,%ax

080486e0 <frame_dummy>:
 80486e0:	b8 d4 9e 04 08       	mov    $0x8049ed4,%eax
 80486e5:	8b 10                	mov    (%eax),%edx
 80486e7:	85 d2                	test   %edx,%edx
 80486e9:	75 05                	jne    80486f0 <frame_dummy+0x10>
 80486eb:	eb 93                	jmp    8048680 <register_tm_clones>
 80486ed:	8d 76 00             	lea    0x0(%esi),%esi
 80486f0:	ba 00 00 00 00       	mov    $0x0,%edx
 80486f5:	85 d2                	test   %edx,%edx
 80486f7:	74 f2                	je     80486eb <frame_dummy+0xb>
 80486f9:	55                   	push   %ebp
 80486fa:	89 e5                	mov    %esp,%ebp
 80486fc:	83 ec 14             	sub    $0x14,%esp
 80486ff:	50                   	push   %eax
 8048700:	ff d2                	call   *%edx
 8048702:	83 c4 10             	add    $0x10,%esp
 8048705:	c9                   	leave  
 8048706:	e9 75 ff ff ff       	jmp    8048680 <register_tm_clones>

0804870b <do_read>:
 804870b:	55                   	push   %ebp
 804870c:	89 e5                	mov    %esp,%ebp
 804870e:	83 ec 18             	sub    $0x18,%esp
 8048711:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048717:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804871a:	31 c0                	xor    %eax,%eax
 804871c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8048723:	83 ec 0c             	sub    $0xc,%esp
 8048726:	68 c0 89 04 08       	push   $0x80489c0
 804872b:	e8 90 fe ff ff       	call   80485c0 <puts@plt>
 8048730:	83 c4 10             	add    $0x10,%esp
 8048733:	83 ec 08             	sub    $0x8,%esp
 8048736:	8d 45 f0             	lea    -0x10(%ebp),%eax
 8048739:	50                   	push   %eax
 804873a:	68 de 89 04 08       	push   $0x80489de
 804873f:	e8 b4 fe ff ff       	call   80485f8 <__isoc99_scanf@plt>
 8048744:	83 c4 10             	add    $0x10,%esp
 8048747:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804874a:	8b 00                	mov    (%eax),%eax
 804874c:	83 ec 08             	sub    $0x8,%esp
 804874f:	50                   	push   %eax
 8048750:	68 e1 89 04 08       	push   $0x80489e1
 8048755:	e8 3e fe ff ff       	call   8048598 <printf@plt>
 804875a:	83 c4 10             	add    $0x10,%esp
 804875d:	90                   	nop
 804875e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048761:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 8048768:	74 05                	je     804876f <do_read+0x64>
 804876a:	e8 49 fe ff ff       	call   80485b8 <__stack_chk_fail@plt>
 804876f:	c9                   	leave  
 8048770:	c3                   	ret    

08048771 <leave>:
 8048771:	55                   	push   %ebp
 8048772:	89 e5                	mov    %esp,%ebp
 8048774:	81 ec b8 00 00 00    	sub    $0xb8,%esp
 804877a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048780:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048783:	31 c0                	xor    %eax,%eax
 8048785:	83 ec 04             	sub    $0x4,%esp
 8048788:	68 a0 00 00 00       	push   $0xa0
 804878d:	6a 00                	push   $0x0
 804878f:	8d 85 54 ff ff ff    	lea    -0xac(%ebp),%eax
 8048795:	50                   	push   %eax
 8048796:	e8 55 fe ff ff       	call   80485f0 <memset@plt>
 804879b:	83 c4 10             	add    $0x10,%esp
 804879e:	83 ec 0c             	sub    $0xc,%esp
 80487a1:	68 e6 89 04 08       	push   $0x80489e6
 80487a6:	e8 15 fe ff ff       	call   80485c0 <puts@plt>
 80487ab:	83 c4 10             	add    $0x10,%esp
 80487ae:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%ebp)
 80487b5:	00 00 00 
 80487b8:	eb 49                	jmp    8048803 <leave+0x92>
 80487ba:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 80487c0:	8d 95 54 ff ff ff    	lea    -0xac(%ebp),%edx
 80487c6:	01 d0                	add    %edx,%eax
 80487c8:	83 ec 04             	sub    $0x4,%esp
 80487cb:	6a 01                	push   $0x1
 80487cd:	50                   	push   %eax
 80487ce:	6a 00                	push   $0x0
 80487d0:	e8 bb fd ff ff       	call   8048590 <read@plt>
 80487d5:	83 c4 10             	add    $0x10,%esp
 80487d8:	83 f8 01             	cmp    $0x1,%eax
 80487db:	74 0a                	je     80487e7 <leave+0x76>
 80487dd:	83 ec 0c             	sub    $0xc,%esp
 80487e0:	6a ff                	push   $0xffffffff
 80487e2:	e8 e9 fd ff ff       	call   80485d0 <exit@plt>
 80487e7:	8d 95 54 ff ff ff    	lea    -0xac(%ebp),%edx
 80487ed:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
 80487f3:	01 d0                	add    %edx,%eax
 80487f5:	0f b6 00             	movzbl (%eax),%eax
 80487f8:	3c 0a                	cmp    $0xa,%al
 80487fa:	74 15                	je     8048811 <leave+0xa0>
 80487fc:	83 85 50 ff ff ff 01 	addl   $0x1,-0xb0(%ebp)
 8048803:	81 bd 50 ff ff ff 9e 	cmpl   $0x9e,-0xb0(%ebp)
 804880a:	00 00 00 
 804880d:	7e ab                	jle    80487ba <leave+0x49>
 804880f:	eb 01                	jmp    8048812 <leave+0xa1>
 8048811:	90                   	nop
 8048812:	83 ec 0c             	sub    $0xc,%esp
 8048815:	8d 85 54 ff ff ff    	lea    -0xac(%ebp),%eax
 804881b:	50                   	push   %eax
 804881c:	e8 77 fd ff ff       	call   8048598 <printf@plt>
 8048821:	83 c4 10             	add    $0x10,%esp
 8048824:	83 ec 0c             	sub    $0xc,%esp
 8048827:	6a 00                	push   $0x0
 8048829:	e8 72 fd ff ff       	call   80485a0 <_exit@plt>

0804882e <main>:
 804882e:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048832:	83 e4 f0             	and    $0xfffffff0,%esp
 8048835:	ff 71 fc             	pushl  -0x4(%ecx)
 8048838:	55                   	push   %ebp
 8048839:	89 e5                	mov    %esp,%ebp
 804883b:	51                   	push   %ecx
 804883c:	83 ec 14             	sub    $0x14,%esp
 804883f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048845:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048848:	31 c0                	xor    %eax,%eax
 804884a:	a1 40 a0 04 08       	mov    0x804a040,%eax
 804884f:	6a 00                	push   $0x0
 8048851:	6a 02                	push   $0x2
 8048853:	6a 00                	push   $0x0
 8048855:	50                   	push   %eax
 8048856:	e8 8d fd ff ff       	call   80485e8 <setvbuf@plt>
 804885b:	83 c4 10             	add    $0x10,%esp
 804885e:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048863:	6a 00                	push   $0x0
 8048865:	6a 02                	push   $0x2
 8048867:	6a 00                	push   $0x0
 8048869:	50                   	push   %eax
 804886a:	e8 79 fd ff ff       	call   80485e8 <setvbuf@plt>
 804886f:	83 c4 10             	add    $0x10,%esp
 8048872:	a1 20 a0 04 08       	mov    0x804a020,%eax
 8048877:	6a 00                	push   $0x0
 8048879:	6a 02                	push   $0x2
 804887b:	6a 00                	push   $0x0
 804887d:	50                   	push   %eax
 804887e:	e8 65 fd ff ff       	call   80485e8 <setvbuf@plt>
 8048883:	83 c4 10             	add    $0x10,%esp
 8048886:	83 ec 0c             	sub    $0xc,%esp
 8048889:	6a 3c                	push   $0x3c
 804888b:	e8 20 fd ff ff       	call   80485b0 <alarm@plt>
 8048890:	83 c4 10             	add    $0x10,%esp
 8048893:	83 ec 0c             	sub    $0xc,%esp
 8048896:	6a 03                	push   $0x3
 8048898:	e8 0b fd ff ff       	call   80485a8 <sleep@plt>
 804889d:	83 c4 10             	add    $0x10,%esp
 80488a0:	83 ec 08             	sub    $0x8,%esp
 80488a3:	6a 00                	push   $0x0
 80488a5:	68 ef 89 04 08       	push   $0x80489ef
 80488aa:	e8 29 fd ff ff       	call   80485d8 <open@plt>
 80488af:	83 c4 10             	add    $0x10,%esp
 80488b2:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80488b5:	83 ec 04             	sub    $0x4,%esp
 80488b8:	6a 01                	push   $0x1
 80488ba:	8d 45 eb             	lea    -0x15(%ebp),%eax
 80488bd:	50                   	push   %eax
 80488be:	ff 75 ec             	pushl  -0x14(%ebp)
 80488c1:	e8 ca fc ff ff       	call   8048590 <read@plt>
 80488c6:	83 c4 10             	add    $0x10,%esp
 80488c9:	83 f8 01             	cmp    $0x1,%eax
 80488cc:	74 0a                	je     80488d8 <main+0xaa>
 80488ce:	83 ec 0c             	sub    $0xc,%esp
 80488d1:	6a ff                	push   $0xffffffff
 80488d3:	e8 c8 fc ff ff       	call   80485a0 <_exit@plt>
 80488d8:	83 ec 0c             	sub    $0xc,%esp
 80488db:	ff 75 ec             	pushl  -0x14(%ebp)
 80488de:	e8 1d fd ff ff       	call   8048600 <close@plt>
 80488e3:	83 c4 10             	add    $0x10,%esp
 80488e6:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax
 80488ea:	0f be c0             	movsbl %al,%eax
 80488ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
 80488f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80488f3:	8d 50 0f             	lea    0xf(%eax),%edx
 80488f6:	b8 10 00 00 00       	mov    $0x10,%eax
 80488fb:	83 e8 01             	sub    $0x1,%eax
 80488fe:	01 d0                	add    %edx,%eax
 8048900:	b9 10 00 00 00       	mov    $0x10,%ecx
 8048905:	ba 00 00 00 00       	mov    $0x0,%edx
 804890a:	f7 f1                	div    %ecx
 804890c:	6b c0 10             	imul   $0x10,%eax,%eax
 804890f:	29 c4                	sub    %eax,%esp
 8048911:	e8 f5 fd ff ff       	call   804870b <do_read>
 8048916:	e8 56 fe ff ff       	call   8048771 <leave>
 804891b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048920:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048923:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 804892a:	74 05                	je     8048931 <main+0x103>
 804892c:	e8 87 fc ff ff       	call   80485b8 <__stack_chk_fail@plt>
 8048931:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048934:	c9                   	leave  
 8048935:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048938:	c3                   	ret    
 8048939:	66 90                	xchg   %ax,%ax
 804893b:	66 90                	xchg   %ax,%ax
 804893d:	66 90                	xchg   %ax,%ax
 804893f:	90                   	nop

08048940 <__libc_csu_init>:
 8048940:	55                   	push   %ebp
 8048941:	57                   	push   %edi
 8048942:	56                   	push   %esi
 8048943:	53                   	push   %ebx
 8048944:	e8 f7 fc ff ff       	call   8048640 <__x86.get_pc_thunk.bx>
 8048949:	81 c3 6f 16 00 00    	add    $0x166f,%ebx
 804894f:	83 ec 0c             	sub    $0xc,%esp
 8048952:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048956:	8d b3 18 ff ff ff    	lea    -0xe8(%ebx),%esi
 804895c:	e8 fb fb ff ff       	call   804855c <_init>
 8048961:	8d 83 14 ff ff ff    	lea    -0xec(%ebx),%eax
 8048967:	29 c6                	sub    %eax,%esi
 8048969:	c1 fe 02             	sar    $0x2,%esi
 804896c:	85 f6                	test   %esi,%esi
 804896e:	74 25                	je     8048995 <__libc_csu_init+0x55>
 8048970:	31 ff                	xor    %edi,%edi
 8048972:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048978:	83 ec 04             	sub    $0x4,%esp
 804897b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804897f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048983:	55                   	push   %ebp
 8048984:	ff 94 bb 14 ff ff ff 	call   *-0xec(%ebx,%edi,4)
 804898b:	83 c7 01             	add    $0x1,%edi
 804898e:	83 c4 10             	add    $0x10,%esp
 8048991:	39 f7                	cmp    %esi,%edi
 8048993:	75 e3                	jne    8048978 <__libc_csu_init+0x38>
 8048995:	83 c4 0c             	add    $0xc,%esp
 8048998:	5b                   	pop    %ebx
 8048999:	5e                   	pop    %esi
 804899a:	5f                   	pop    %edi
 804899b:	5d                   	pop    %ebp
 804899c:	c3                   	ret    
 804899d:	8d 76 00             	lea    0x0(%esi),%esi

080489a0 <__libc_csu_fini>:
 80489a0:	f3 c3                	repz ret 

Disassembly of section .fini:

080489a4 <_fini>:
 80489a4:	53                   	push   %ebx
 80489a5:	83 ec 08             	sub    $0x8,%esp
 80489a8:	e8 93 fc ff ff       	call   8048640 <__x86.get_pc_thunk.bx>
 80489ad:	81 c3 0b 16 00 00    	add    $0x160b,%ebx
 80489b3:	83 c4 08             	add    $0x8,%esp
 80489b6:	5b                   	pop    %ebx
 80489b7:	c3                   	ret    
