
no：     文件格式 elf32-i386


Disassembly of section .init:

080482ac <_init>:
 80482ac:	53                   	push   %ebx
 80482ad:	83 ec 08             	sub    $0x8,%esp
 80482b0:	e8 bb 00 00 00       	call   8048370 <__x86.get_pc_thunk.bx>
 80482b5:	81 c3 f7 14 00 00    	add    $0x14f7,%ebx
 80482bb:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482c1:	85 c0                	test   %eax,%eax
 80482c3:	74 05                	je     80482ca <_init+0x1e>
 80482c5:	e8 46 00 00 00       	call   8048310 <__gmon_start__@plt>
 80482ca:	83 c4 08             	add    $0x8,%esp
 80482cd:	5b                   	pop    %ebx
 80482ce:	c3                   	ret    

Disassembly of section .plt:

080482d0 <.plt>:
 80482d0:	ff 35 b0 97 04 08    	pushl  0x80497b0
 80482d6:	ff 25 b4 97 04 08    	jmp    *0x80497b4
 80482dc:	00 00                	add    %al,(%eax)
	...

080482e0 <read@plt>:
 80482e0:	ff 25 b8 97 04 08    	jmp    *0x80497b8
 80482e6:	68 00 00 00 00       	push   $0x0
 80482eb:	e9 e0 ff ff ff       	jmp    80482d0 <.plt>

080482f0 <memcpy@plt>:
 80482f0:	ff 25 bc 97 04 08    	jmp    *0x80497bc
 80482f6:	68 08 00 00 00       	push   $0x8
 80482fb:	e9 d0 ff ff ff       	jmp    80482d0 <.plt>

08048300 <__libc_start_main@plt>:
 8048300:	ff 25 c0 97 04 08    	jmp    *0x80497c0
 8048306:	68 10 00 00 00       	push   $0x10
 804830b:	e9 c0 ff ff ff       	jmp    80482d0 <.plt>

Disassembly of section .plt.got:

08048310 <__gmon_start__@plt>:
 8048310:	ff 25 a8 97 04 08    	jmp    *0x80497a8
 8048316:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048320 <_start>:
 8048320:	31 ed                	xor    %ebp,%ebp
 8048322:	5e                   	pop    %esi
 8048323:	89 e1                	mov    %esp,%ecx
 8048325:	83 e4 f0             	and    $0xfffffff0,%esp
 8048328:	50                   	push   %eax
 8048329:	54                   	push   %esp
 804832a:	52                   	push   %edx
 804832b:	e8 23 00 00 00       	call   8048353 <_start+0x33>
 8048330:	81 c3 7c 14 00 00    	add    $0x147c,%ebx
 8048336:	8d 83 74 ed ff ff    	lea    -0x128c(%ebx),%eax
 804833c:	50                   	push   %eax
 804833d:	8d 83 14 ed ff ff    	lea    -0x12ec(%ebx),%eax
 8048343:	50                   	push   %eax
 8048344:	51                   	push   %ecx
 8048345:	56                   	push   %esi
 8048346:	c7 c0 84 84 04 08    	mov    $0x8048484,%eax
 804834c:	50                   	push   %eax
 804834d:	e8 ae ff ff ff       	call   8048300 <__libc_start_main@plt>
 8048352:	f4                   	hlt    
 8048353:	8b 1c 24             	mov    (%esp),%ebx
 8048356:	c3                   	ret    
 8048357:	66 90                	xchg   %ax,%ax
 8048359:	66 90                	xchg   %ax,%ax
 804835b:	66 90                	xchg   %ax,%ax
 804835d:	66 90                	xchg   %ax,%ax
 804835f:	90                   	nop

08048360 <_dl_relocate_static_pie>:
 8048360:	f3 c3                	repz ret 
 8048362:	66 90                	xchg   %ax,%ax
 8048364:	66 90                	xchg   %ax,%ax
 8048366:	66 90                	xchg   %ax,%ax
 8048368:	66 90                	xchg   %ax,%ax
 804836a:	66 90                	xchg   %ax,%ax
 804836c:	66 90                	xchg   %ax,%ax
 804836e:	66 90                	xchg   %ax,%ax

08048370 <__x86.get_pc_thunk.bx>:
 8048370:	8b 1c 24             	mov    (%esp),%ebx
 8048373:	c3                   	ret    
 8048374:	66 90                	xchg   %ax,%ax
 8048376:	66 90                	xchg   %ax,%ax
 8048378:	66 90                	xchg   %ax,%ax
 804837a:	66 90                	xchg   %ax,%ax
 804837c:	66 90                	xchg   %ax,%ax
 804837e:	66 90                	xchg   %ax,%ax

08048380 <deregister_tm_clones>:
 8048380:	b8 cc 97 04 08       	mov    $0x80497cc,%eax
 8048385:	3d cc 97 04 08       	cmp    $0x80497cc,%eax
 804838a:	74 24                	je     80483b0 <deregister_tm_clones+0x30>
 804838c:	b8 00 00 00 00       	mov    $0x0,%eax
 8048391:	85 c0                	test   %eax,%eax
 8048393:	74 1b                	je     80483b0 <deregister_tm_clones+0x30>
 8048395:	55                   	push   %ebp
 8048396:	89 e5                	mov    %esp,%ebp
 8048398:	83 ec 14             	sub    $0x14,%esp
 804839b:	68 cc 97 04 08       	push   $0x80497cc
 80483a0:	ff d0                	call   *%eax
 80483a2:	83 c4 10             	add    $0x10,%esp
 80483a5:	c9                   	leave  
 80483a6:	c3                   	ret    
 80483a7:	89 f6                	mov    %esi,%esi
 80483a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi
 80483b0:	f3 c3                	repz ret 
 80483b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <register_tm_clones>:
 80483c0:	b8 cc 97 04 08       	mov    $0x80497cc,%eax
 80483c5:	2d cc 97 04 08       	sub    $0x80497cc,%eax
 80483ca:	c1 f8 02             	sar    $0x2,%eax
 80483cd:	89 c2                	mov    %eax,%edx
 80483cf:	c1 ea 1f             	shr    $0x1f,%edx
 80483d2:	01 d0                	add    %edx,%eax
 80483d4:	d1 f8                	sar    %eax
 80483d6:	74 20                	je     80483f8 <register_tm_clones+0x38>
 80483d8:	ba 00 00 00 00       	mov    $0x0,%edx
 80483dd:	85 d2                	test   %edx,%edx
 80483df:	74 17                	je     80483f8 <register_tm_clones+0x38>
 80483e1:	55                   	push   %ebp
 80483e2:	89 e5                	mov    %esp,%ebp
 80483e4:	83 ec 10             	sub    $0x10,%esp
 80483e7:	50                   	push   %eax
 80483e8:	68 cc 97 04 08       	push   $0x80497cc
 80483ed:	ff d2                	call   *%edx
 80483ef:	83 c4 10             	add    $0x10,%esp
 80483f2:	c9                   	leave  
 80483f3:	c3                   	ret    
 80483f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483f8:	f3 c3                	repz ret 
 80483fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048400 <__do_global_dtors_aux>:
 8048400:	80 3d e0 97 04 08 00 	cmpb   $0x0,0x80497e0
 8048407:	75 17                	jne    8048420 <__do_global_dtors_aux+0x20>
 8048409:	55                   	push   %ebp
 804840a:	89 e5                	mov    %esp,%ebp
 804840c:	83 ec 08             	sub    $0x8,%esp
 804840f:	e8 6c ff ff ff       	call   8048380 <deregister_tm_clones>
 8048414:	c6 05 e0 97 04 08 01 	movb   $0x1,0x80497e0
 804841b:	c9                   	leave  
 804841c:	c3                   	ret    
 804841d:	8d 76 00             	lea    0x0(%esi),%esi
 8048420:	f3 c3                	repz ret 
 8048422:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 8048429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048430 <frame_dummy>:
 8048430:	55                   	push   %ebp
 8048431:	89 e5                	mov    %esp,%ebp
 8048433:	5d                   	pop    %ebp
 8048434:	eb 8a                	jmp    80483c0 <register_tm_clones>

08048436 <m>:
 8048436:	55                   	push   %ebp
 8048437:	89 e5                	mov    %esp,%ebp
 8048439:	53                   	push   %ebx
 804843a:	83 ec 14             	sub    $0x14,%esp
 804843d:	e8 2e ff ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 8048442:	81 c3 6a 13 00 00    	add    $0x136a,%ebx
 8048448:	83 ec 04             	sub    $0x4,%esp
 804844b:	68 40 42 0f 00       	push   $0xf4240
 8048450:	c7 c0 00 98 04 08    	mov    $0x8049800,%eax
 8048456:	50                   	push   %eax
 8048457:	6a 00                	push   $0x0
 8048459:	e8 82 fe ff ff       	call   80482e0 <read@plt>
 804845e:	83 c4 10             	add    $0x10,%esp
 8048461:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048464:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048467:	83 ec 04             	sub    $0x4,%esp
 804846a:	50                   	push   %eax
 804846b:	c7 c0 00 98 04 08    	mov    $0x8049800,%eax
 8048471:	50                   	push   %eax
 8048472:	8d 45 ea             	lea    -0x16(%ebp),%eax
 8048475:	50                   	push   %eax
 8048476:	e8 75 fe ff ff       	call   80482f0 <memcpy@plt>
 804847b:	83 c4 10             	add    $0x10,%esp
 804847e:	90                   	nop
 804847f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 8048482:	c9                   	leave  
 8048483:	c3                   	ret    

08048484 <main>:
 8048484:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048488:	83 e4 f0             	and    $0xfffffff0,%esp
 804848b:	ff 71 fc             	pushl  -0x4(%ecx)
 804848e:	55                   	push   %ebp
 804848f:	89 e5                	mov    %esp,%ebp
 8048491:	51                   	push   %ecx
 8048492:	83 ec 04             	sub    $0x4,%esp
 8048495:	e8 18 00 00 00       	call   80484b2 <__x86.get_pc_thunk.ax>
 804849a:	05 12 13 00 00       	add    $0x1312,%eax
 804849f:	e8 92 ff ff ff       	call   8048436 <m>
 80484a4:	b8 00 00 00 00       	mov    $0x0,%eax
 80484a9:	83 c4 04             	add    $0x4,%esp
 80484ac:	59                   	pop    %ecx
 80484ad:	5d                   	pop    %ebp
 80484ae:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80484b1:	c3                   	ret    

080484b2 <__x86.get_pc_thunk.ax>:
 80484b2:	8b 04 24             	mov    (%esp),%eax
 80484b5:	c3                   	ret    
 80484b6:	66 90                	xchg   %ax,%ax
 80484b8:	66 90                	xchg   %ax,%ax
 80484ba:	66 90                	xchg   %ax,%ax
 80484bc:	66 90                	xchg   %ax,%ax
 80484be:	66 90                	xchg   %ax,%ax

080484c0 <__libc_csu_init>:
 80484c0:	55                   	push   %ebp
 80484c1:	57                   	push   %edi
 80484c2:	56                   	push   %esi
 80484c3:	53                   	push   %ebx
 80484c4:	e8 a7 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 80484c9:	81 c3 e3 12 00 00    	add    $0x12e3,%ebx
 80484cf:	83 ec 0c             	sub    $0xc,%esp
 80484d2:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 80484d6:	8d b3 10 ff ff ff    	lea    -0xf0(%ebx),%esi
 80484dc:	e8 cb fd ff ff       	call   80482ac <_init>
 80484e1:	8d 83 0c ff ff ff    	lea    -0xf4(%ebx),%eax
 80484e7:	29 c6                	sub    %eax,%esi
 80484e9:	c1 fe 02             	sar    $0x2,%esi
 80484ec:	85 f6                	test   %esi,%esi
 80484ee:	74 25                	je     8048515 <__libc_csu_init+0x55>
 80484f0:	31 ff                	xor    %edi,%edi
 80484f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484f8:	83 ec 04             	sub    $0x4,%esp
 80484fb:	55                   	push   %ebp
 80484fc:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048500:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048504:	ff 94 bb 0c ff ff ff 	call   *-0xf4(%ebx,%edi,4)
 804850b:	83 c7 01             	add    $0x1,%edi
 804850e:	83 c4 10             	add    $0x10,%esp
 8048511:	39 fe                	cmp    %edi,%esi
 8048513:	75 e3                	jne    80484f8 <__libc_csu_init+0x38>
 8048515:	83 c4 0c             	add    $0xc,%esp
 8048518:	5b                   	pop    %ebx
 8048519:	5e                   	pop    %esi
 804851a:	5f                   	pop    %edi
 804851b:	5d                   	pop    %ebp
 804851c:	c3                   	ret    
 804851d:	8d 76 00             	lea    0x0(%esi),%esi

08048520 <__libc_csu_fini>:
 8048520:	f3 c3                	repz ret 

Disassembly of section .fini:

08048524 <_fini>:
 8048524:	53                   	push   %ebx
 8048525:	83 ec 08             	sub    $0x8,%esp
 8048528:	e8 43 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 804852d:	81 c3 7f 12 00 00    	add    $0x127f,%ebx
 8048533:	83 c4 08             	add    $0x8,%esp
 8048536:	5b                   	pop    %ebx
 8048537:	c3                   	ret    
